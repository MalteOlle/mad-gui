name: Test and Lint

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test_lint:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        python -m pip install --upgrade pip
        sudo apt-get update
        sudo apt-get autoclean
        sudo apt-get install -y --no-install-recommends qtbase5-dev-tools xvfb libegl1-mesa x11-xserver-utils libxkbcommon-x11-0 x11-utils
        sudo apt-get clean
        python -m pip install --no-cache-dir --upgrade pip
        pip install --no-cache-dir anybadge devpi-client PySide2 pytest-xvfb Qt.py xvfbwrapper
        sudo apt-get purge -y build-essential 
        sudo apt-get purge -y cmake
        export DISPLAY=:99
        export SCREEN=0
        export DBUS_SESSION_BUS_ADDRESS=/dev/null
        export QT_DEBUG_PLUGINS=1
        export QT_VERBOSE=1
        export QT_TESTING=1
        export QT_QPA_PLATFORM="offscreen"
        export GITHUB_CI=1
        export PYTEST_DEBUG=1
        sudo apt-get install -y build-essential libgl1-mesa-dev
        sudo apt-get install -y libxcb-xinerama0
        sudo apt-get install -y libpulse-dev
        sudo apt-get install -y tk
        sudo apt-get install -y libqt5gstreamer-dev
        sudo apt-get install -y libgssapi-krb5-2
        sudo apt-get install -y libqt5multimedia5-plugins
        sudo apt-get install -y libgstreamer1.0-0 gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-pulseaudio
        sudo apt-get -y install git
        sudo pip install pip --upgrade
        sudo pip install git+https://github.com/PyCQA/astroid.git@astroid-2.5.1
        sudo apt-get -y install libpulse-mainloop-glib0        
        pip install poetry
        poetry config virtualenvs.in-project true
        poetry update --lock
        poetry install
    - name: Testing
      run: |
        poetry run doit test
    - name: Linting
      run: |
        poetry run doit -v 0 --continue format_check lint
